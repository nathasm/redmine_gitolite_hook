#!/usr/bin/env bash

HOOK_URL=gitolite_hook
FETCH_URL=sys/fetch_changesets
LOG=/var/lib/gitolite/.gitolite/logs/post-receive.log
REDMINE_HTTP_BASIC_AUTH="redmine@phlegx.com:L3n_gfPF-y}GWOIk+mD4"

DEFAULT_REDMINE_KEY=gfUNLpbTwAWhyZH4UbQ1
DEFAULT_REDMINE_SERVER=https://redmine.phlegx.net
DEFAULT_REDMINE_PROJECT_ID=$GL_REPO
DEFAULT_CURL_IGNORE_SECURITY_CFG="true"

KEY=$(git config hooks.redmine_gitolite.key 2>/dev/null)
if [ -z "$KEY" ]; then
    KEY=$DEFAULT_REDMINE_KEY
fi

REDMINE_SERVER=$(git config hooks.redmine_gitolite.server 2>/dev/null)
if [ -z "$REDMINE_SERVER" ]; then
    REDMINE_SERVER=$DEFAULT_REDMINE_SERVER
fi

CURL_IGNORE_SECURITY_CFG=$(git config --bool hooks.redmine_gitolite.curlignoresecurity 2>/dev/null)
if [ -z "$CURL_IGNORE_SECURITY_CFG" ]; then
    CURL_IGNORE_SECURITY_CFG=$DEFAULT_CURL_IGNORE_SECURITY_CFG
fi

case "$CURL_IGNORE_SECURITY_CFG" in
    true)
        CURL_IGNORE_SECURITY=" -k "
        ;;
    false)
        CURL_IGNORE_SECURITY=" "
        ;;
esac

if [ -z "$REDMINE_HTTP_BASIC_AUTH" ]; then
    BASI_AUTH=" "
else
    BASIC_AUTH="--user $REDMINE_HTTP_BASIC_AUTH"
fi

REDMINE_PROJECT_ID=$(git config hooks.redmine_gitolite.projectid 2>/dev/null)
if [ -z "$REDMINE_PROJECT_ID" ]; then
  echo "No redmine project id configured."
else
  echo "Inform Redmine"
  echo "Notifying Redmine (${REDMINE_SERVER}) about changes to this repo (${GL_REPO} => ${REDMINE_PROJECT_ID})"
  #while read oldrev newrev refname; do
    echo "Hitting the Redmine Gitolite hook for $old $new $refname"
    curl -X POST $CURL_IGNORE_SECURITY $BASIC_AUTH -S -s -d "oldrev=$oldrev&newrev=$newrev&refname=$refname&user=$GL_USER" "$REDMINE_SERVER/$HOOK_URL?project_id=$REDMINE_PROJECT_ID&key=$KEY"
    echo "Hitting the Redmine fetch changesets URL"
    curl -S -s $CURL_IGNORE_SECURITY $BASIC_AUTH "$REDMINE_SERVER/$FETCH_URL?id=$REDMINE_PROJECT_ID&key=$KEY"
  #done
fi

